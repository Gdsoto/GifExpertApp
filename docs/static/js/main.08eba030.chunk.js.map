{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","pages/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","GifGridItem","className","src","alt","GifGrid","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAgB1C,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,YAAY,YACZC,MAAOV,EACPW,SAnBuB,SAACR,GAC1BF,EAAcE,EAAES,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAKHI,MAAMF,GALH,cAKhBG,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZd,kBAgBfM,GAhBe,4CAAH,sDCqBLO,EAlBM,SAACf,GAAc,IAAD,EACRf,mBAAS,CAClCsB,KAAM,GACNS,SAAS,IAHwB,mBAC3BC,EAD2B,KACpBC,EADoB,KAelC,OATAC,qBAAU,WACTpB,EAAQC,GAAUoB,MAAK,SAACV,GACvBQ,EAAS,CACRX,KAAMG,EACNM,SAAS,SAGT,CAAChB,IAEGiB,GCPOI,EATK,SAAC,GAAoB,IAAlBT,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,sBAAKoB,UAAU,yCAAf,UACC,qBAAKC,IAAKrB,EAAKsB,IAAKZ,IACpB,4BAAIA,QCmBQa,EArBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAAe,EACCe,EAAaf,GAAjCa,EADmB,EACzBN,KAAcS,EADW,EACXA,QAEtB,OACC,qCACC,8BAAMhB,IACLgB,GAAW,wCAEX,qBAAKM,UAAU,WAAf,SACC,8BACET,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,eCMde,EAjBM,WAAO,IAAD,EACUzC,mBAAS,CAAC,UADpB,mBACnBQ,EADmB,KACPT,EADO,KAG1B,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACES,EAAWgB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCLnB2B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.08eba030.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories((categories) => [inputValue, ...categories]);\n\t\t\tsetInputValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Buscar...\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleInputChange}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nAddCategory.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=10&api_key=xkk6MGZIZ1hBlKBa8JkjzONUh994PrAb`;\n\n\tconst resp = await fetch(url);\n\tconst { data } = await resp.json();\n\n\tconst gifs = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images?.downsized_medium.url,\n\t\t};\n\t});\n\n\treturn gifs;\n};\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGif';\n\nconst useFetchGifs = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((img) => {\n\t\t\tsetState({\n\t\t\t\tdata: img,\n\t\t\t\tloading: false,\n\t\t\t});\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n\nexport default useFetchGifs;\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__fadeIn\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifs(category); //--> customHook\n\n\treturn (\n\t\t<>\n\t\t\t<div>{category}</div>\n\t\t\t{loading && <p>Loading</p>}\n\t\t\t{\n\t\t\t\t<div className=\"cardGrid\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{images.map((img) => (\n\t\t\t\t\t\t\t<GifGridItem key={img.id} {...img} />\n\t\t\t\t\t\t\t//--->envia como parametro un spread con el objeto img\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t);\n};\n\nexport default GifGrid;\n","import React, { useState } from 'react';\nimport AddCategory from '../components/AddCategory';\nimport GifGrid from '../components/GifGrid';\n\nconst GifExpertApp = () => {\n\tconst [categories, setCategories] = useState(['Wanda']);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory setCategories={setCategories} />\n\t\t\t<hr />\n\t\t\t<ol>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t))}\n\t\t\t</ol>\n\t\t</>\n\t);\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Styles\nimport './index.css';\n\n//Components\nimport GifExpertApp from './pages/GifExpertApp';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<GifExpertApp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}